from bs4 import BeautifulSoup as bs
import requests
import time
import pandas as pd
import os
import config
import storage_to_db

nowtime = '当前时间：<font size="3" color="red">' + time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time())) + '</font><br>'


def get_exploit_db_info():
    headers = {
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0',
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language':'zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3',
        'Cookie':'_ga=GA1.3.151879025.1520582790; _gid=GA1.3.1728776549.1523330453; PHPSESSID=niirk5p8e6glodfoqphqteud73; _gat=1'
    }
    url = 'https://www.exploit-db.com/'
    res = requests.get(url=url,headers=headers,timeout=60)
    #print(res.text)
    soup = bs(res.text,'html.parser')
    trs = soup.find_all('tr',{'class':'featured'})
    total_exploit_db =len(trs)
    #print(trs)
    select_msg = ''
    keywords = config.keywords
    wordlist = []
    try:
        for tr in trs:
            description = tr.find_all('td')[4].find('a').string
            #print(description)
            date = tr.find_all('td')[0].string
            platform = tr.find_all('td')[5].find('a').string
            #print(platform) 
            site = tr.find_all('td')[4].find('a')['href']
            for k in keywords:
                if k in description:
                    keyword = k
                    wordlist.append(keyword)
                    data = {'date':date,'description':description,'platform':platform}
                    storage_to_db.storage_data(data)
                    select_msg += '<p><b>发布日期：'+date+'</p></b>'+'<br><b>漏洞描述：</b>'+'<a href ="'+site\
            +'">'+description+ '</a></br>'
    except Exception as e:
        pass
            
    if len(trs) == 0:
        msg = nowtime + '<p>今日Exploit_db风和日丽，没有大事发生。</p>'
        dataframe = pd.DataFrame({'exploit_db告警总数':[0],'exploit_db检索数':[0]})
        dataframe.to_csv(os.path.join(config.output_path, 'exploit_db_data.csv'),encoding="gb2312")
        return msg
    else:
        msg_header = '<p>今日Exploit_db一共<font size="3" color="red">' + str(len(trs))+'</font>条。'      
        if len(wordlist) == 0:
            key_msg = '根据设置的关键字，未匹配到关注的Exploit_db信息。</p>'
            msg = nowtime + msg_header + key_msg
            dataframe = pd.DataFrame({'exploit_db告警总数':[len(trs)],'exploit_db检索数':[0]})
            dataframe.to_csv(os.path.join(config.output_path, 'exploit_db_data.csv'),encoding="gb2312")
            return msg
        else:
            key_msg = '</p>根据设置的关键字，关注的Exploit_db信息一共<font size="3" color="red">' + str(len(wordlist))+'</font>个。具体如下：<br><br>'
            msg = nowtime + key_msg + select_msg
            dataframe = pd.DataFrame({'exploit_db告警总数':[len(trs)],'exploit_db检索数':[len(wordlist)]})
            dataframe.to_csv(os.path.join(config.output_path, 'exploit_db_data.csv'),encoding="gb2312")
            return msg

if __name__ == '__main__':
    get_exploit_db_info()